#!/usr/bin/env ruby

# Copyright (c) 2020-2022 Andy Maleh
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version = File.read(File.expand_path('../../VERSION', __FILE__))
puts "== rvm-tui-setup version #{version.strip} =="

ruby = `which ruby`
ruby = `which jruby` if ruby.to_s.strip.empty?
ruby = ruby.strip
rvm = `rvm current`.strip
command = "rvm #{rvm} do #{ruby} #{File.expand_path('../../lib/rvm-tui.rb', __FILE__)}"

rvm_tui_script = <<~SHELL_SCRIPT
  function rvm-tui()
  {
    # Load RVM into a shell session *as a function*
    if [[ -s "$HOME/.rvm/scripts/rvm" ]] ; then
      # First try to load from a user install
      source "$HOME/.rvm/scripts/rvm"
    elif [[ -s "/usr/local/rvm/scripts/rvm" ]] ; then
      # Then try to load from a root install
      source "/usr/local/rvm/scripts/rvm"
    else
      printf "ERROR: An RVM installation was not found.\\n"
    fi
    
    current_rvm="$(rvm current)"
    current_ruby="$(echo $current_rvm | sed -E 's/@.*$//')"
    current_gemset="default"
    if [[ $current_rvm == *"@"* ]] ; then
      current_gemset="$(echo $current_rvm | sed -E 's/^[^@]+@//')"
    fi
    #{command} $current_ruby $current_gemset
    if [ -f "$HOME/.rvm_command" ] ; then
      source $HOME/.rvm_command
      rm $HOME/.rvm_command
    fi
  }
  alias rvm-ui=rvm-tui
  alias rvmtui=rvm-tui
  alias rvmui=rvm-tui
SHELL_SCRIPT

require 'fileutils'
home_dir = `echo ~`.strip
FileUtils.mkdir_p("#{home_dir}/bin")
rvm_tui_script_file = "#{home_dir}/.rvm_tui_source"
rvm_tui_script_file_bash = "$HOME/.rvm_tui_source"
File.write(rvm_tui_script_file, rvm_tui_script)

[
  ['.bash_profile', '.bashrc'],
  ['.zprofile', '.zshrc']
].each do |profile_and_fallback|
  shell_profile_file_name = profile_and_fallback.first
  shell_profile_file_name = profile_and_fallback.last if !File.exist?("#{home_dir}/#{shell_profile_file_name}")
  shell_profile_file = "#{home_dir}/#{shell_profile_file_name}"
  FileUtils.touch(shell_profile_file)
  bash_profile = File.read(shell_profile_file)
  rvm_tui_source_statement = "source \"#{rvm_tui_script_file_bash}\""
  unless bash_profile.split("\n").detect {|line| line.include?(rvm_tui_source_statement) }
    File.write(shell_profile_file, "#{bash_profile}\n#{rvm_tui_source_statement}")
  end
  puts "~/#{shell_profile_file_name} has been modified to source the `rvm-tui` function from ~/.rvm_tui_source"
end

puts <<~OUTPUT
  
  Before using `rvm-tui`, start a new shell session (open a new terminal tab) or run:
  
  source ~/.rvm_tui_source
  
  Afterwards, you may run `rvm-tui` via one of these commands (aliases):
  
  rvm-tui
  rvm-ui
  rvmtui
  rvmui
OUTPUT
